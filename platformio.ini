; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html




; ****NOTE*** 
; If you want esp-idf core verbose debug messages on the serial console then add "-D CORE_DEBUG_LEVEL=5" to the build_flags


[platformio]
;default_envs = esp32-wokwi-simulator

[esp32_base]
platform = espressif32@6.5.0 ; use latest platform
f_cpu = 240000000L
monitor_speed = 115200
upload_speed = 460800
monitor_raw = no ; Try to enable use of ASCII Escape codes that esp_console requires. Must set to 'no' to perform exception backtrace decoding as per monitor_filters
monitor_filters = esp32_exception_decoder
board = esp32dev
framework = arduino
platform_packages = 
	framework-arduinoespressif32@https://github.com/espressif/arduino-esp32.git#2.0.14
	;espressif/toolchain-xtensa-esp32@12.2.0+20230208  ; Set if need to use latest toolchain
build_unflags = 
	-std=gnu++11
	-D CONFIG_ASYNC_TCP_MAX_ACK_TIME=5000   // (keep default)
  	-D CONFIG_ASYNC_TCP_PRIORITY=10         // (keep default)
  	-D CONFIG_ASYNC_TCP_QUEUE_SIZE=64       // (keep default)
  	-D CONFIG_ASYNC_TCP_RUNNING_CORE=1      // force async_tcp task to be on same core as Arduino app (default is any core)
  	-D CONFIG_ASYNC_TCP_STACK_SIZE=4096     // reduce the stack size (default is 16K)

[lib_deps_rmii_ethernet]
build_flags = 
	-O3
	-std=gnu++2a
	-D ESP32_RMII_ETHERNET
lib_deps = 
	gin66/FastAccelStepper@^0.30.11
	ESP32Ping
	AsyncTCP
	ESP32Encoder
lib_ignore = 
	AsyncUDP_ESP32_Ethernet

[lib_deps_spi_ethernet]
build_flags = 
	-O3
	-std=gnu++2a
	-D ESP32_SPI_ETHERNET
	-D CONFIG_ETH_SPI_ETHERNET_W5500
lib_deps = 
	gin66/FastAccelStepper@^0.30.11
	AsyncTCP
	AsyncUDP_ESP32_Ethernet
	WebServer_ESP32_W5500
	WebServer_ESP32_W6100
	WebServer_ESP32_ENC
	ESP32Encoder
	ESP32Ping


[env:esp32-rmii-ethernet]
extends = esp32_base, lib_deps_rmii_ethernet

[env:esp32-spi-ethernet]
extends = esp32_base, lib_deps_spi_ethernet
; debug_init_break = tbreak setup ; debug default breakpoint on setup
; upload_protocol = jlink ; for SEGGER jlink debugging
; debug_tool = jlink ; JLINK debug tool
; debug_speed = 2000 ; 2khz speed. Update based on your own testing as required

; *** DEBUG BUILD for Wokwi simulator use ***
[env:esp32-wokwi-simulator]
extends = esp32_base
build_type = debug
build_flags = 
	-O0
	-std=gnu++2a
	-D ESP32_RMII_ETHERNET
	-D ESP32_WOKWI_SIMULATOR
debug_init_break = tbreak setup
monitor_port = rfc2217://localhost:4000 ; Wokwi Serial TCP port defined in wokwi.toml
debug_tool = custom
debug_port = localhost:3333 ; Wokwi GDB debug server TCP port

lib_deps = 
	gin66/FastAccelStepper@^0.30.11
	AsyncTCP
	ESP32Encoder
	ESP32Ping
lib_ignore = 
	AsyncUDP_ESP32_Ethernet

; [env:lolin_s2_mini]
; platform = espressif32@6.5.0
; board_build.f_cpu = ${common.f_cpu}
; monitor_speed = 115200
; monitor_raw	= true
; upload_speed = 460800
; monitor_port = com12
; upload_protocol = esptool
; upload_port = com12
; board_build.mcu = esp32s2
; monitor_filters = ${common.monitor_filters}
; board = lolin_s2_mini
; framework = arduino, espidf
; platform_packages = framework-arduinoespressif32@https://github.com/espressif/arduino-esp32.git#2.0.14
; build_flags = 
; 	-O2
; 	-D ESP32SX_USB_ETHERNET
; 	-DBOARD_HAS_PSRAM
; 	-DCONFIG_TINYUSB_ENABLED
; 	-DARDUINO_USB_MODE=0
; 	-DARDUINO_USB_CDC_ON_BOOT=1
; 	;-DCFG_TUD_CDC
    

; lib_deps = 
; 	gin66/FastAccelStepper@^0.30.11
; 	AsyncTCP
; 	;https://github.com/hathach/tinyusb.git#0.16.0
	
; lib_ignore = 
; 	AsyncUDP_ESP32_Ethernet

; [env:waveshare_s2_pico]
; platform = espressif32@6.5.0
; board_build.f_cpu = ${common.f_cpu}
; monitor_speed = 115200
; monitor_raw	= true
; monitor_port = com23
; ;upload_protocol = esptool
; ;upload_port = com12

; upload_protocol = espota
; upload_port = 10.10.0.197
; monitor_filters = ${common.monitor_filters}
; board = esp32-s2-saola-1
; board_build.mcu = esp32s2
; framework = arduino, espidf
; platform_packages = framework-arduinoespressif32@https://github.com/espressif/arduino-esp32.git#2.0.14
; build_flags = 
; 	-O2
; 	-DARDUINO_WAVESHARE_S2_PICO
; 	-DCONFIG_TINYUSB_ENABLED=1
; 	-D ESP32SX_USB_ETHERNET
; 	;-D CONFIG_TINYUSB_ENABLED=1
; 	-D CFG_TUSB_MCU=OPT_MCU_ESP32S2
; 	;-D CFG_TUSB_DEBUG=0
; 	-D ARDUINO_USB_MODE=0
; 	-D ARDUINO_USB_CDC_ON_BOOT=1
; 	-D BOARD_HAS_PSRAM
; 	-D CORE_DEBUG_LEVEL=5 
; 	;-DCFG_TUD_CDC
    

; lib_deps = 
; 	gin66/FastAccelStepper@^0.30.11
; 	AsyncTCP
; 	;https://github.com/hathach/tinyusb.git#0.16.0
	
; lib_ignore = 
; 	AsyncUDP_ESP32_Ethernet
